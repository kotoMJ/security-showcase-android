language: android
jdk: oraclejdk8
env:
  global:
    - ANDROID_TARGET=android-28
    - ANDROID_ABI=armeabi-v7a
android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    - tools
    - platform-tools
    # The BuildTools version used by your project
    - build-tools-28.0.3
    # The SDK version used to compile your project
    - android-28


    - extra-android-m2repository
    - sys-img-${ANDROID_ABI}-${ANDROID_TARGET}

  licenses:
    - 'android-sdk-preview-license-52d11cd2'
    - 'android-sdk-license-.+'
    - 'google-gdk-license-.+'
rvm:
  - 2.3
before_install:
  - "bundle install"

before_script:
  - "echo \"Build process is started \U0001F46F\""

  - "echo \"Setup mobile-android-login-x-biometric keystore\""
  #  - mkdir mobile-android-login-x-biometric/extras/keystore
  - echo $DEBUG_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-x-biometric/extras/keystore/debugKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $debugStorePassword $debugKeyAlias $debugKeyPassword > mobile-android-login-x-biometric/extras/keystore/debugKeystore.properties
  - echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-x-biometric/extras/keystore/releaseKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $releaseStorePassword $releaseKeyAlias $releaseKeyPassword > mobile-android-login-x-biometric/extras/keystore/releaseKeystore.properties

  - "echo \"Setup mobile-android-login-x-keystore-compat keystore\""
  #  - mkdir mobile-android-login-x-keystore-compat/extras/keystore
  - echo $DEBUG_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-x-keystore-compat/extras/keystore/debugKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $debugStorePassword $debugKeyAlias $debugKeyPassword > mobile-android-login-x-keystore-compat/extras/keystore/debugKeystore.properties
  - echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-x-keystore-compat/extras/keystore/releaseKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $releaseStorePassword $releaseKeyAlias $releaseKeyPassword > mobile-android-login-x-keystore-compat/extras/keystore/releaseKeystore.properties

  - "echo \"Setup mobile-android-login-legacy keystore\""
  #  - mkdir mobile-android-login-legacy/extras/keystore
  - echo $DEBUG_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-legacy/extras/keystore/debugKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $debugStorePassword $debugKeyAlias $debugKeyPassword > mobile-android-login-legacy/extras/keystore/debugKeystore.properties
  - echo $RELEASE_KEYSTORE_BASE64 | base64 --decode > mobile-android-login-legacy/extras/keystore/releaseKeystore.jks
  - printf 'keystore.store.password=%s\nkeystore.key.alias=%s\nkeystore.key.password=%s'
    $releaseStorePassword $releaseKeyAlias $releaseKeyPassword > mobile-android-login-legacy/extras/keystore/releaseKeystore.properties

#install:
#  # Run lint checks reports for Danger
#  - "./gradlew runChecksForDanger"
#  # Run Danger
#  - "bundle exec danger"

script:
  - "./gradlew clean"
    #  - "./gradlew androidDependencies"
    #  - "./gradlew lint test"
    #  - "./gradlew assembleDevDebug --no-daemon --stacktrace"
  # Run lint checks reports for Danger
  # - "./gradlew runAndroidLintAndMergeResults"
  # Run Danger
  - "bundle exec danger --verbose"

#script:
#  - ./gradlew clean
#  - ./gradlew module-core:jacocoUnitTestReport -PjacocoBuildType=debug -PjacocoEnv=dev
#  - ./gradlew module-face-detection:jacocoUnitTestReport -PjacocoBuildType=debug -PjacocoEnv=dev
#  - ./gradlew module-text-recognition:jacocoUnitTestReport -PjacocoBuildType=debug -PjacocoEnv=dev
#  - ./gradlew mobile:jacocoUnitTestReport -PjacocoBuildType=debug -PjacocoEnv=dev

#- echo no | android create avd --force -n test -t $ANDROID_TARGET --abi $ANDROID_ABI
#- emulator -avd test -no-skin -no-audio -no-window &
#- android-wait-for-emulator
#- adb shell setprop dalvik.vm.dexopt-flags v=n,o=v
#- ./gradlew connectedCheck

#after_success:
#  - bash <(curl -s https://codecov.io/bash)