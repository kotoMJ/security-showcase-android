apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = publishedGroupId // Maven Group ID for the artifact
install {
	repositories.mavenInstaller {
		// This generates POM.xml with proper parameters
		pom {
			project {
				packaging 'aar'
				groupId publishedGroupId
				artifactId artifact

				// Add your description here
				name libraryName
				description libraryDescription
				url siteUrl

				// Set your license
				licenses {
					license {
						name licenseName
						url licenseUrl
					}
				}
				developers {
					developer {
						id developerId
						name developerName
						email developerEmail
					}
				}
				scm {
					connection gitUrl
					developerConnection gitUrl
					url siteUrl

				}
			}
		}
	}
}

version = libraryVersion

if(project.hasProperty("android")) { // Android libraries
	task sourcesJar(type: Jar) {
		classifier = 'sources'
		from android.sourceSets.main.java.srcDirs
	}

	task javadoc(type: Javadoc) {
		failOnError false
		source = android.sourceSets.main.java.srcDirs
		classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
	}
} else { // Java libraries
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = 'sources'
		from sourceSets.main.allSource
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

// Bintray

bintray {
	user = bintrayUser
	key = "$System.env.BINTRAY_API_KEY"

	configurations = ['archives']
	pkg {
		repo = bintrayRepo
		name = bintrayName
		desc = libraryDescription
		websiteUrl = siteUrl
		vcsUrl = gitUrl
		licenses = allLicenses
		publish = true
		override = true
		publicDownloadNumbers = true
		version {
			desc = libraryDescription
//			gpg {
//				sign = true //Determines whether to GPG sign the files. The default is false
//				passphrase = properties.getProperty("bintray.gpg.password")
//				//Optional. The passphrase for GPG signing'
//			}
		}
	}
}