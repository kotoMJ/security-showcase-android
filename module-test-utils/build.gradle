apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
//apply plugin: 'kotlin-allopen'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs'

kapt {
	useBuildCache = true
	correctErrorTypes = true // avoid unknown type replacing with NonExistentClass
}

//allOpen {
//	annotation('cz.kotox.securityshowcase.core.OpenForMocking')
//}

android {

	compileSdkVersion sdk_version
	buildToolsVersion build_tools_version

	compileSdkVersion sdk_version
	buildToolsVersion build_tools_version
	dataBinding.enabled true
	flavorDimensions "env"

	defaultConfig {
		minSdkVersion min_sdk_version
		targetSdkVersion sdk_version
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'

		dev {
			java.srcDirs += 'src/server/kotlin'
		}
		production {
			java.srcDirs += 'src/server/kotlin'
		}
		mock {
			java.srcDirs += 'src/mock/kotlin'
		}
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
		debug {
			minifyEnabled false
		}
	}
	dataBinding {
		enabled = true
	}
	flavorDimensions "env"

	productFlavors {
		mock {
			dimension = "env"
		}

		dev {
			dimension = "env"
		}

		production {
			dimension = "env"
		}
	}

	lintOptions {
		abortOnError false
		xmlOutput file("$project_directory/build/reports/android-lint/android-lint.xml")
		htmlOutput file("$project_directory/build/reports/android-lint/android-lint.html")
	}
}

dependencies {

	implementation project(':module-core')

//	api "androidx.core:core-ktx:${app_androidx_ktx_core_version}"
//	api "androidx.lifecycle:lifecycle-viewmodel-ktx:${app_androidx_lifecycle_viewmodel_ktx}"

	/**
	 *  UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST UNIT-TEST
	 */
	api "junit:junit:$app_junit_version"
	api "org.mockito:mockito-core:$app_mockito_version"
//	https://proandroiddev.com/mockito-2-x-over-powermock-migration-tips-and-tricks-top-ten-118c52abd1d8
	api "org.powermock:powermock-api-mockito2:$app_powermock_version"
	api "androidx.arch.core:core-testing:$app_androidx_core_testing_version"

	implementation fileTree(dir: 'libs', include: ['*.jar'])

	api "org.hamcrest:hamcrest-library:$app_hamcrest_library_version"

	/**
	 *  UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST UI-TEST
	 */

	// Espresso core
	api('androidx.test.espresso:espresso-core:3.1.0',{
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	// Espresso-contrib for DatePicker, RecyclerView, Drawer actions, Accessibility checks, CountingIdlingResource
	api('androidx.test.espresso:espresso-contrib:3.1.0',{
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	api('androidx.test.espresso:espresso-intents:3.1.0',{
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	api('androidx.annotation:annotation:1.0.0',{
		exclude group: 'com.android.support', module: 'support-annotations'
	})


}
repositories {
	maven {
		url 'http://dl.bintray.com/kotlin/kotlin-eap'
	}
	mavenCentral()
}

