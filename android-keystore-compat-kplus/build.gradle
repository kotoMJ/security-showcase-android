apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

apply from: "${project_directory}/lint/lint-config.gradle"

final KC_GIT_TAG_REGEX = "KC*"
// Last Git tag name on current branch
final KC_GIT_TAG_NAME = "git describe --tags --abbrev=0 --match ${KC_GIT_TAG_REGEX}".execute([], project.rootDir).text.trim()
// Total number of tags in the app
final KC_GIT_TAG_COUNT = "git tag --list ${KC_GIT_TAG_REGEX}".execute([], project.rootDir).text.split("\n").size()

ext {
	bintrayName = 'android-keystore-compat-kplus'
	artifact = 'android-keystore-compat-kplus'

	bintrayUser = 'kotomisak'
	bintrayRepo = 'cz.kotox'

	publishedGroupId = 'cz.kotox'
	libraryName = 'android-keystore-compat-kplus'

	libraryDescription = 'Wrapper library designed to simplify secure handling string secret in shared preferences using Keystore as private key storage.'

	siteUrl = 'https://github.com/kotoMJ/security-showcase-android/tree/featureV3/library_dependency/android-keystore-compat-kplus'
	gitUrl = 'https://github.com/kotoMJ/security-showcase-android/tree/featureV3/library_dependency'

	libraryVersion = KC_GIT_TAG_NAME.replaceAll("KC-", "")
	libraryCode = KC_GIT_TAG_COUNT

	developerId = 'kotoMJ'
	developerName = 'Michal Jenicek'
	developerEmail = 'jenicek.michal@gmail.com'

	licenseName = 'The Apache Software License, Version 2.0'
	licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
	allLicenses = ["Apache-2.0"]
}
android {
	compileSdkVersion versions.sdk
	buildToolsVersion versions.build_tools

	defaultConfig {
		minSdkVersion 19
		targetSdkVersion versions.sdk
		versionCode libraryCode
		versionName libraryVersion

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

	}
	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}
	flavorDimensions "lib"

	resourcePrefix 'kc_'
	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		main.java.srcDirs += 'src/debug/kotlin'
	}
}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${versions.gradle_bintray}"
		classpath "com.github.dcendents:android-maven-gradle-plugin:${versions.gradle_maven}"
	}
}

dependencies {
	implementation fileTree(dir: 'libs', include: ['*.aar'])

	if (project.hasProperty("keystore.compat.dependency.type")) {
		if (project.property("keystore.compat.dependency.type") == "local") {
			api(project(':android-keystore-compat-base'))
			api(project(':android-keystore-compat-19')){
				exclude group: 'org.jetbrains.kotlin'
			}
			api(project(':android-keystore-compat-21')){
				exclude group: 'org.jetbrains.kotlin'
			}
			api(project(':android-keystore-compat-23')){
				exclude group: 'org.jetbrains.kotlin'
			}
		}
		throw new IllegalThreadStateException("Unsupported dependency type=" + project.property("keystore.compat.dependency.type"))
	} else {
		api("cz.kotox:android-keystore-compat-base:${versions.keystore_compat}")
		api("cz.kotox:android-keystore-compat-19:${versions.keystore_compat}"){
			exclude group: 'org.jetbrains.kotlin'
		}
		api("cz.kotox:android-keystore-compat-21:${versions.keystore_compat}"){
			exclude group: 'org.jetbrains.kotlin'
		}
		api("cz.kotox:android-keystore-compat-23:${versions.keystore_compat}") {
			exclude group: 'org.jetbrains.kotlin'
		}
	}

	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${versions.kotlin}"

	androidTestCompile("com.android.support.test.espresso:espresso-core:${versions.espresso_core}", {
		exclude group: 'com.android.support', module: 'support-annotations'
	})
	testImplementation 'junit:junit:4.12'

}
repositories {
	mavenCentral()
}


apply from: '../publish.gradle'
