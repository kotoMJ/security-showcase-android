apply plugin: 'com.android.application'
apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-kapt'//http://stackoverflow.com/questions/42568394/build-errors-with-new-kotlin-1-1-kapt-cant-parse-databinding-params
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// App ID base (package name)
final APPLICATION_ID = 'cz.koto.securityshowcase'
final SHOWCASE_GIT_TAG_REGEX = "SHOWCASE*"
// Last Git tag name on current branch
final SHOWCASE_GIT_TAG_NAME = "git describe --tags --abbrev=0 --match ${SHOWCASE_GIT_TAG_REGEX}".execute([], project.rootDir).text.trim()
// Total number of tags in the app
final SHOWCASE_GIT_TAG_COUNT = "git tag --list ${SHOWCASE_GIT_TAG_REGEX}".execute([], project.rootDir).text.split("\n").size()

apply from: 'common.gradle'

android {
	compileSdkVersion compile_sdk_version
	buildToolsVersion build_tools_version

	defaultConfig {
		applicationId APPLICATION_ID
		minSdkVersion min_sdk_version
		targetSdkVersion compile_sdk_version
		multiDexEnabled false
		versionCode SHOWCASE_GIT_TAG_COUNT
		versionName SHOWCASE_GIT_TAG_NAME.replaceAll("SHOWCASE-", "")
		vectorDrawables.useSupportLibrary = true
	}

	buildTypes {
		release {
			shrinkResources true
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
		}
	}

	flavorDimensions "lib"
	productFlavors {
		local {
			dimension = "lib"
		}

		rosti {
			dimension = "lib"
		}
	}

	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
		main.java.srcDirs += 'src/debug/kotlin'
		rosti.java.srcDirs += 'src/rosti/kotlin'
		local.java.srcDirs += 'src/local/kotlin'
	}

	dataBinding {
		enabled = true;
	}

	lintOptions {
		ignoreWarnings true
	}

	packagingOptions {
		exclude 'android/databinding/*'
	}
}

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath "com.apollographql.apollo:gradle-plugin:$apollo_graphql_version"
	}
}

dependencies {
	//compile 'com.android.support:multidex:1.0.2'

	implementation fileTree(dir: 'libs', include: ['*.jar'])
	implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

	if (project.hasProperty("keystore.compat.dependency.type")) {
		if (project.property("keystore.compat.dependency.type") == "local") {
			api(project(':android-keystore-compat')) {
				exclude group: 'com.android.support'
				exclude group: 'org.jetbrains.kotlin'
			}
			api(project(':android-keystore-compat-base'))
			api(project(':android-keystore-compat-19'))
			api(project(':android-keystore-compat-21'))
			api(project(':android-keystore-compat-23'))
		}
	} else {
		api("cz.koto:android-keystore-compat:$keystore_compat_version_latest") {
			exclude group: 'com.android.support'
		}
		api("cz.koto:android-keystore-compat-base:$keystore_compat_version_latest")
		api("cz.koto:android-keystore-compat-19:$keystore_compat_version_impl")
		api("cz.koto:android-keystore-compat-21:$keystore_compat_version_impl")
		api("cz.koto:android-keystore-compat-23:$keystore_compat_version_impl")
	}

	implementation('com.scottyab:rootbeer-lib:0.0.6') {
		exclude group: 'com.android.support'
	}

	kapt "com.android.databinding:compiler:$android_gradle_version"
	implementation "com.android.databinding:library:$android_binding_version"
	implementation "com.android.databinding:adapters:$android_binding_version"

	compile "com.android.support:appcompat-v7:$support_library_version"
	compile "com.android.support:support-annotations:$support_library_version"
	compile "com.android.support:design:$support_library_version"
	compile "com.android.support:cardview-v7:$support_library_version"
	compile "com.android.support.constraint:constraint-layout:$constraint_layout_version"

	compile "android.arch.lifecycle:extensions:$rootProject.arch_lifecycle_version"
	annotationProcessor "android.arch.lifecycle:compiler:$rootProject.arch_lifecycle_version"

	// rxjava
	implementation("io.reactivex.rxjava2:rxandroid:$rxandroid_version") {
		exclude group: 'io.reactivex.rxjava2', module: 'rxjava'
	}
	implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"

	// retrofit + okhttp + gson
	implementation "com.google.code.gson:gson:$gson_version"
	implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
	implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
	implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
	implementation("com.squareup.retrofit2:converter-gson:$retrofit_version") {
		transitive = true
		exclude module: 'gson'
	}
	implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
	implementation("com.squareup.retrofit2:retrofit-mock:$retrofit_version") {
		exclude group: 'com.squareup.retrofit2', module: 'retrofit'
	}

	implementation("org.alfonz:alfonz-view:$alfonz_version") {
		exclude group: 'com.android.support'
	}

	compile "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter:$tatarka_version"
	compile "me.tatarka.bindingcollectionadapter2:bindingcollectionadapter-recyclerview:$tatarka_version"

	compile "com.github.bumptech.glide:glide:$glide_version"

	debugCompile "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
	releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
	testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

	compile "org.parceler:parceler-api:$parceler_version"
	kapt "org.parceler:parceler:$parceler_version"

	compile "com.auth0.android:jwtdecode:$jwtdecode"

	compile "com.apollographql.apollo:apollo-rx2-support:$apollo_graphql_version"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

//	compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.8.2@aar'
//	compile 'com.patloew.rxlocation:rxlocation:1.0.1'
//	compile 'com.mtramin:rxfingerprint:2.0.1'

//	testCompile 'junit:junit:4.12'
//	testCompile 'com.nhaarman:mockito-kotlin:0.7.0'
//	testCompile 'org.jetbrains.spek:spek:1.0.25'
//	testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}
repositories {
	flatDir {
		dirs 'libs'
	}
}

apollo {
	customTypeMapping {
		DateTime = "java.util.Date"
	}
}